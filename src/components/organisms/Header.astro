---
import Logo from "../../assets/logo.svg";
import NavBar from "../molecules/NavBar.astro";

interface Props {
  navbarBehavior?: "navigationType" | "redirectionType";
}

const {navbarBehavior} = Astro.props;
---

<header class="py-2 fixed w-full z-20 top-0">
    <nav class="bg-primary-100/50 backdrop-blur-lg w-full max-w-screen-xl rounded-full m-auto px-8">
      <div class="flex flex-wrap items-center justify-between py-4">
        <a href="/">
          <Logo class="w-60 xl:w-80"/>
        </a>
        <button id="mobile-menu-button" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-600 rounded-lg md:hidden hover:bg-primary-200 focus:outline-none focus:ring-2 focus:ring-primary-300" aria-controls="navbar-solid-bg" aria-expanded="false">
            <span class="sr-only">Abrir menu principal</span>
            <svg class="w-5 h-5 menu-icon transition-transform duration-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
            </svg>
            <svg class="w-7 h-7 close-icon hidden transition-transform duration-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
        </button> 
        
        <div class="hidden w-full md:block md:w-auto" id="navbar-solid-bg">
          <NavBar behavior={navbarBehavior}/>
        </div>
      </div>
    </nav>
</header>

<script>
  const menuButton = document.getElementById('mobile-menu-button');
  const menuContent = document.getElementById('navbar-solid-bg');
  const menuIcon = menuButton?.querySelector('.menu-icon');
  const closeIcon = menuButton?.querySelector('.close-icon');

  menuButton?.addEventListener('click', () => {
    menuContent?.classList.toggle('hidden');
    
    const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
    menuButton.setAttribute('aria-expanded', (!isExpanded).toString());

    if (!isExpanded) {
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
    } else {
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    }
  });
</script>