---
import "../../styles/global.css";

import Layout from "../../templates/Layout.astro";
import Container from "../../templates/Container.astro";
import Header from "../../components/organisms/Header.astro";
import Contact from "../../components/organisms/Contact.astro";
import Footer from "../../components/organisms/Footer.astro";
import Project from "../../components/molecules/Project.astro";
import ReadingProgress from "../../components/atoms/ReadingProgress.astro";

import ProblemIcon from "../../assets/icons/target.svg";
import SolutionIcon from "../../assets/icons/emoji_objects.svg";
import RoleIcon from "../../assets/icons/assignment_ind.svg";
import CalendarMonth from "../../assets/icons/calendar_month.svg";
import CorporateFare from "../../assets/icons/corporate_fare.svg";
import ProcessIcon from "../../assets/icons/draw.svg";
import LearningIcon from "../../assets/icons/neurology.svg";
import ProjectIcon from "../../assets/palette.svg";

import { projects } from "../../data/projects.js";

export async function getStaticPaths() {
  return projects.map((project) => ({
    params: { id: project.id },
    props: { project: project },
  }));
}

const { id } = Astro.params;
const { project } = Astro.props;
---

<Layout>

  <ReadingProgress />

  <Header navbarBehavior="redirectionType" />

  <section
    class="flex py-10 md:py-16 xl:py-20 w-full bg-gradient-to-t from-primary-200 to-primary-100"
  >
    <Container>
      <div class="flex flex-col gap-8 md:gap-10 xl:gap-16 text-gray-800">
        <h2
          class="font-brand font-semibold text-center text-3xl md:text-4xl xl:text-5xl"
        >
          {project.title}
        </h2>
        <img
          src={project.cover_image}
          alt={project.title}
          class="w-full min-h-48 d:min-h-72 xl:min-h-96 object-cover outline-[4px] md:outline-[5px] xl:outline-[6px] outline-primary-200 rounded-2xl md:rounded-3xl xl:rounded-4xl bg-primary-100 mt-2 xl:mt-3"
        />
        <div class="grid grid-cols-1 xl:grid-cols-3 gap-4 md:gap-5 xl:gap-6">
          <div class="flex flex-col xl:gap-4">
            <div class="flex gap-2 md:gap-3 xl:gap-4">
              <CorporateFare class="size-6 md:size-7 xl:size-8 fill-gray-800 mt-1 xl:mt-0.5" />
              <p class="font-bold text-base md:text-lg xl:text-xl">
                Cliente: {project.details.client}
              </p>
            </div>
            <div class="flex gap-2 md:gap-3 xl:gap-4">
              <CalendarMonth class="size-6 md:size-7 xl:size-8 fill-gray-800 mt-1 xl:mt-0.5" />
              <p class="font-bold text-base md:text-lg xl:text-xl">{project.details.date}</p>
            </div>
          </div>
          <p
            class="col-span-2 text-base md:text-lg xl:text-xl"
            set:html={project.details.context}
          />
        </div>
      </div>
    </Container>
  </section>

  <section class="bg-[url('../assets/vectors/wireframe_vector.svg')] bg-cover flex w-full bg-gray-100 py-16 md:py-20 xl:py-28">
    <Container>
      <div class="flex flex-col gap-8 md:gap-10 xl:gap-12 text-gray-800">
        <article class="grid grid-cols-1 md:grid-cols-3 gap-2 md:gap-6">
          <div class="flex items-center gap-4 md:gap-5 xl:gap-6 mb-auto">
            <ProblemIcon
              class="size-6 md:size-7 xl:size-8 fill-gray-800"
            />
            <h3 class="font-brand font-semibold text-xl md:text-2xl xl:text-3xl">
              Desafío
            </h3>
          </div>
          <p
            class="col-span-2 text-base md:text-lg xl:text-xl w-full"
            set:html={project.details.challenge}
          />
        </article>
        <article class="grid grid-cols-1 md:grid-cols-3 gap-2 md:gap-6">
          <div class="flex items-center gap-4 md:gap-5 xl:gap-6 mb-auto">
            <RoleIcon
              class="size-6 md:size-7 xl:size-8 fill-gray-800"
            />
            <h3 class="font-brand font-semibold text-xl md:text-2xl xl:text-3xl">
              Mi rol
            </h3>
          </div>
          <p
            class="col-span-2 text-base md:text-lg xl:text-xl w-full"
            set:html={project.details.role}
          />
        </article>
        <article class="grid grid-cols-1 md:grid-cols-3 gap-2 md:gap-6">
          <div class="flex items-center gap-4 md:gap-5 xl:gap-6 mb-auto">
            <SolutionIcon
              class="size-6 md:size-7 xl:size-8 fill-gray-800"
            />
            <h3 class="font-brand font-semibold text-xl md:text-2xl xl:text-3xl">
              Solución
            </h3>
          </div>
          <p
            class="col-span-2 text-base md:text-lg xl:text-xl w-full"
            set:html={project.details.solution}
          />
        </article>
      </div>
    </Container>
  </section>

  <section class="py-16 md:py-20 xl:py-28 w-full bg-gray-100">
    <Container>
      <div class="flex flex-col gap-12 md:gap-14 xl:gap-16 text-gray-800">
        <div class="flex w-full items-center gap-3.5 md:gap-5 xl:gap-6">
          <ProcessIcon class="size-7 md:size-9 xl:size-12 fill-gray-800"/>
          <h2 class="font-brand font-semibold w-full text-3xl md:text-4xl xl:text-5xl text-gray-800">Proceso</h2>
        </div>
        <div class="flex flex-col gap-10 md:gap-16 xl:gap-20">
          {
            project.details.process.length === 0 && (
              <p class="text-gray-700">
                No hay procesos disponibles para este proyecto.
              </p>
            )
          }
          {
            project.details.process.map((process, index) => (
              <div class="flex flex-col gap-4 md:gap-8">
                {process.type.startsWith("image") ? (
                  <img
                    src={process.url}
                    alt={process.title}
                    class="bg-[url('../assets/vectors/level_curves.svg'),linear-gradient(to_top,theme(colors.primary.100),theme(colors.primary.200))] bg-cover w-full outline-[4px] md:outline-[5px] xl:outline-[6px] outline-primary-200 min-h-36 md:min-h-80 xl:min-h-[500px]  rounded-xl md:rounded-3xl xl:rounded-4xl"
                  />
                ) : (
                  <video
                    autoplay
                    muted
                    loop
                    width="100%"
                    class="bg-[url('../assets/vectors/level_curves.svg'),linear-gradient(to_top,theme(colors.primary.100),theme(colors.primary.200))] bg-cover w-full outline-[4px] md:outline-[5px] xl:outline-[6px] outline-primary-200 min-h-36 md:min-h-80 xl:min-h-[500px]  rounded-xl md:rounded-3xl xl:rounded-4xl"
                  >
                    <source src={process.url} type={process.type} />
                    Su navegador no soporta la etiqueta de vídeo.
                  </video>
                )}

                <div class="grid grid-cols-1 md:grid-cols-3 gap-2 md:gap-6">
                  <h3 class="font-brand font-semibold text-xl md:text-2xl xl:text-3xl md:ml-10 xl:ml-14">
                    {process.title}
                  </h3>
                  <div class="col-span-2 text-base md:text-lg xl:text-xl md:mt-2" set:html={process.description}></div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </Container>
  </section>

  <section class="py-16 md:py-20 xl:py-28 w-full bg-gray-50">
    <Container>
      <div class="flex flex-col gap-10 md:gap-16 xl:gap-20 text-gray-800">
        <div class="flex w-full items-center gap-3.5 md:gap-5 xl:gap-6">
          <LearningIcon class="size-7 md:size-9 xl:size-12 fill-gray-800"/>
          <h2 class="font-brand font-semibold w-full text-3xl md:text-4xl xl:text-5xl text-gray-800">Aprendizajes</h2>
        </div>
        <div class="flex flex-col gap-6 md:gap-8 xl:gap-10">
          {
            project.details.learnings.map((learning, index) => (
              <div class="flex flex-col gap-2 md:gap-3 xl:gap-4">
                <div class="grid grid-cols-1 md:grid-cols-3">
                  <span class="font-semibold font-brand text-xl md:text-2xl xl:text-3xl ml-0.5 md:ml-1 xl:ml-2">
                    0{index + 1}
                  </span>{" "}
                  <p class="col-span-2 text-base md:text-lg xl:text-xl xl:mt-2" set:html={learning}></p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </Container>
  </section>

  <Contact></Contact>

  {
    projects.length > 1 && (
      <section class="py-16 md:py-20 xl:py-28 w-full bg-gray-100">
        <Container>
          <div class="flex flex-col gap-12 md:gap-14 xl:gap-16 text-gray-800">
            <div class="flex w-full items-center gap-3.5 md:gap-5 xl:gap-6">
              <ProjectIcon class="size-7 md:size-9 xl:size-12 fill-gray-800"/>
              <h2 class="font-brand font-semibold w-full text-3xl md:text-4xl xl:text-5xl text-gray-800">Otros proyectos</h2>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 xl:gap-10">
              {projects
                .filter((project) => project.id !== id)
                .map((project) => (
                  <Project
                    id={project.id}
                    title={project.title}
                    description={project.description}
                    cover_image={project.cover_image}
                    category={project.category}
                  />
                ))}
            </div>
          </div>
        </Container>
      </section>
    )
  }
  <Footer />
</Layout>
